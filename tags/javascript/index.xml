<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JavaScript - Tag - Plumliil Blogs</title><link>https://plumliil.cn/tags/javascript/</link><description>JavaScript - Tag - Plumliil Blogs</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>plumliil@outlook.com (Plumliil)</managingEditor><webMaster>plumliil@outlook.com (Plumliil)</webMaster><lastBuildDate>Fri, 05 Apr 2024 15:18:21 +0800</lastBuildDate><atom:link href="https://plumliil.cn/tags/javascript/" rel="self" type="application/rss+xml"/><item><title>Iframe跨域通信</title><link>https://plumliil.cn/posts/20240405-iframe%E8%B7%A8%E5%9F%9F%E9%80%9A%E4%BF%A1/</link><pubDate>Fri, 05 Apr 2024 15:18:21 +0800</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20240405-iframe%E8%B7%A8%E5%9F%9F%E9%80%9A%E4%BF%A1/</guid><description>iframe间跨域通信 在 web 开发中，使用 iframe 进行通信是一种常见的技术，特别是在需要在页面中嵌入另一个页面或者来自不同域的内容时。通过 iframe 通信，父页</description></item><item><title>videojs播放流媒体视频</title><link>https://plumliil.cn/posts/20240207-videojs%E6%92%AD%E6%94%BE%E6%B5%81%E5%AA%92%E4%BD%93%E8%A7%86%E9%A2%91/</link><pubDate>Wed, 07 Feb 2024 20:01:23 +0800</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20240207-videojs%E6%92%AD%E6%94%BE%E6%B5%81%E5%AA%92%E4%BD%93%E8%A7%86%E9%A2%91/</guid><description><![CDATA[下载相关npm包 { &#34;dependencies&#34;: { &#34;@videojs-player/vue&#34;: &#34;^1.0.0&#34;, &#34;video.js&#34;: &#34;^7.21.5&#34;, &#34;videojs-contrib-hls&#34;: &#34;^5.15.0&#34;, &#34;vue-video-player&#34;: &#34;^6.0.0&#34; }, &#34;devDependencies&#34;: { &#34;@types/video.js&#34;: &#34;^7.3.56&#34;, }, } 前端相关vue3代码 &lt;script setup lang=&#34;ts&#34;&gt; import videojs from &#39;video.js&#39; import type { VideoJsPlayerOptions } from &#39;video.js&#39; import &#39;video.js/dist/video-js.min.css&#39; interface MyVideoProps { /** 视频地址 */ src: string } const props = withDefaults(defineProps&lt;MyVideoProps&gt;(), {}) //]]></description></item><item><title>代理模式</title><link>https://plumliil.cn/posts/20240112-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 22 Jan 2024 20:01:23 +0800</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20240112-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid><description>https://www.patterns.dev/vanilla/proxy-pattern 代理模式 通过代理对象，我们可以更好地控制与某些对象的交互.例如当我们获取或者设置值时,每当我们与对象交互代理对象就可以确定该对象地行为. 一</description></item><item><title>单例模式</title><link>https://plumliil.cn/posts/20240103-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Wed, 03 Jan 2024 22:24:39 +0800</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20240103-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid><description>https://www.patterns.dev/vanilla/singleton-pattern 单例模式 单例是可以实例化一次就可以全局访问的类,这个创建出来的单例可以在整个应用中进行共享,这使得单例可以帮助应用管理全局状态 首先让我们看</description></item><item><title>在js中修改less文件内样式</title><link>https://plumliil.cn/posts/20230421-%E5%9C%A8js%E4%B8%AD%E4%BF%AE%E6%94%B9less%E6%96%87%E4%BB%B6%E5%86%85%E6%A0%B7%E5%BC%8F/</link><pubDate>Fri, 21 Apr 2023 22:51:58 +0800</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20230421-%E5%9C%A8js%E4%B8%AD%E4%BF%AE%E6%94%B9less%E6%96%87%E4%BB%B6%E5%86%85%E6%A0%B7%E5%BC%8F/</guid><description>在项目中使用使用进度条时遇到了一点问题,根据需求进度条的百分比需要在条内显示,但是当完成度太低时由于进度条背景和百分比值都是接近的颜色,所以</description></item><item><title>FileAPI与BlobAPI</title><link>https://plumliil.cn/posts/20221216-fileapi%E4%B8%8Eblobapi/</link><pubDate>Fri, 16 Dec 2022 21:14:17 +0000</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20221216-fileapi%E4%B8%8Eblobapi/</guid><description>File 简单介绍 HTML5在DOM上为文件输入元素添加了Files集合,当用户在文件字段中选择一个或多个文件时,这个files及合作中会包含一组F</description></item><item><title>函数柯里化</title><link>https://plumliil.cn/posts/20221206-%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/</link><pubDate>Tue, 06 Dec 2022 15:00:23 +0000</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20221206-%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/</guid><description>在计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数</description></item><item><title>async和await</title><link>https://plumliil.cn/posts/20221127-async%E5%92%8Cawait/</link><pubDate>Sun, 27 Nov 2022 22:53:08 +0000</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20221127-async%E5%92%8Cawait/</guid><description>async,await 是基于 promise,async 函数始终返回一个 Promise 对象 await 的意思是等待,函数等待 await 执行之后才继续往下执行 async 和 await 的其中一个作用就是可以优化 Fetch 语法 使用 generator 来实现 async,await 数据获取</description></item><item><title>javascript中继承的几种实现方法</title><link>https://plumliil.cn/posts/20220722-javascript%E4%B8%AD%E7%BB%A7%E6%89%BF%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</link><pubDate>Fri, 22 Jul 2022 16:45:21 +0000</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20220722-javascript%E4%B8%AD%E7%BB%A7%E6%89%BF%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</guid><description>继承 在javacript继承很是重要,通过继承可以实现代码的复用,让子类继承父类从而减少代码量,记下来使用多个方法来实现继承. 1.原型链的继</description></item><item><title>Js中几种循环的使用</title><link>https://plumliil.cn/posts/20220423-js%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%BE%AA%E7%8E%AF%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 23 Apr 2022 21:15:17 +0000</pubDate><author>Plumliil</author><guid>https://plumliil.cn/posts/20220423-js%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%BE%AA%E7%8E%AF%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>在JavaScript中有五种常用的循环，现在来分别介绍一下五种循环的用法。 1.while 当满足条件时进入循环，进入循环后，当条件不满足时，跳出循环。w</description></item></channel></rss>